# Configurable variables

# User - the non root configured user
CONFIG_USER="labo"

# Rfkill - block wireless devices
CONFIG_INIT_RFKILL=true
CONFIG_RFKILL_INTERFACES="wlan,bluetooth"

# Journal - limit size
CONFIG_INIT_JOURNAL_LIMIT=false
CONFIG_JOURNAL_SYSTEM_MAX="250M"
CONFIG_JOURNAL_FILE_MAX="50M"

# RAM - set swappiness
CONFIG_INIT_RAM_SWAPPINESS_CUSTOMIZE=true
CONFIG_RAM_SWAPPINESS_VALUE="10"

# Pacman - set mirrors
CONFIG_INIT_PACMAN_SET_MIRROR_COUNTRIES=false
CONFIG_PACMAN_MIRRORS_COUNTRIES="Italy,Global,Germany,Switzerland,Czechia,France,Netherlands,Austria"
# Pacman - enable colored output
CONFIG_INIT_PACMAN_ENABLE_COLORS=false
# Pacman - install packages
CONFIG_INIT_PACMAN_INSTALL_PACKAGES=false
CONFIG_PACMAN_PACKAGES="pacman-contrib,htop,git,unzip,docker,docker-compose,python-pip,bluez,bluez-utils,base-devel,linux-rpi4-mainline,linux-rpi4-mainline-headers"
# Pacman - cleanup
CONFIG_INIT_PACMAN_CLEANUP=true

# Rpi - EEPROM update branch
CONFIG_INIT_RPI_EEPROM_BRANCH_CHANGE=false
CONFIG_RPI_EEPROM_UPDATE_BRANCH="stable"
# Rpi - EEPROM update check
CONFIG_INIT_RPI_EEPROM_UPDATE_CHECK=true
# Rpi - Overclock
CONFIG_INIT_RPI_OVERCLOCK_ENABLE=true
CONFIG_RPI_OVERCLOCK_OVER_VOLTAGE="6"
CONFIG_RPI_OVERCLOCK_ARM_FREQ="2000"
CONFIG_RPI_OVERCLOCK_GPU_FREQ="750"

# User - add to groups
CONFIG_INIT_USER_ADD_TO_GROUPS=false
CONFIG_USER_GROUPS_TO_ADD="docker,tty,uucp,lp"
# User - sudo without password
CONFIG_INIT_USER_SUDO_WITHOUT_PWD=true

# Nano - enable syntax highlighting
CONFIG_NANO_ENABLE_SYNTAX_HIGHLIGHTING=true

# Network - optimizations
CONFIG_NETWORK_OPTIMIZATIONS=true
# Network - enable routing
CONFIG_NETWORK_ROUTING_ENABLE=true
# Network - MACVLAN host <-> docker bridge
CONFIG_NETWORK_MACVLAN_SETUP=true
CONFIG_NETWORK_MACVLAN_PARENT="end0"
CONFIG_NETWORK_MACVLAN_STATIC_IP="192.168.45.193"
CONFIG_NETWORK_MACVLAN_RANGE="192.168.45.224/27"
CONFIG_NETWORK_MACVLAN_SUBNET="192.168.45.0/24"
CONFIG_NETWORK_MACVLAN_GATEWAY="192.168.45.1"
# Network - IPv6 Disable
CONFIG_NETWORK_IPV6_DISABLE=true

# SSD - enable trim
CONFIG_SSD_TRIM_ENABLE=true
CONFIG_SSD_TRIM_VENDOR="04e8"  # lsusb to find it
CONFIG_SSD_TRIM_PRODUCT="61f5" # lsusb to find it
# SSD - FS optimizations
CONFIG_SSD_OPTIMIZATIONS=true

# NTP - custom config
CONFIG_NTP_CUSTOMIZATION=true
CONFIG_NTP_SERVERS="192.168.21.1"
CONFIG_NTP_FALLBACK_SERVERS="time.cloudflare.com 193.204.114.232 193.204.114.233"

# SSH - keys
CONFIG_SSH_KEYS_ADD=true
# SSH - add hosts
CONFIG_SSH_HOSTS_ADD=true
CONFIG_SSH_HOSTS=("github.com" "gitlab.com" "bitbucket.org" "ssh.dev.azure.com" "vs-ssh.visualstudio.com")
# SSH - Hardening
CONFIG_SSH_HARDENING=true

# Services - bluetooth
CONFIG_SRV_BT_ENABLE=true
# Services - docker
CONFIG_SRV_DOCKER_ENABLE=true

# DNS
CONFIG_DNS_CUSTOMIZATION=true
CONFIG_DNS_UPLINK_MODE=true
CONFIG_DNS_SRVS="8.8.8.8"
CONFIG_DNS_FALLBACK_SRVS="8.8.4.4"
CONFIG_DNS_DNSSEC="no"

# Docker - login
CONFIG_DOCKER_LOGIN=true
# Docker - custom bridge network
CONFIG_DOCKER_NETWORK_ADD_CUSTOM_BRIDGE=true
# Docker - add MACVLAN network
CONFIG_DOCKER_NETWORK_ADD_MACVLAN=true
# Docker - start compose
CONFIG_DOCKER_COMPOSE_START=true
CONFIG_DOCKER_COMPOSE_FILE_PATH="${HOME_USER_D}/docker/docker-compose.yml"

# Backup - restore
CONFIG_BACKUP_RESTORE=true
CONFIG_BACKUP_FILE_PATH="${HOME_USER_D}/backup.tar.gz"